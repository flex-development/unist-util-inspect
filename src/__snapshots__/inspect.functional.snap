// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`functional:inspect > should handle nodes outside of children (sample 0) 1`] = `
"element<template>
  content: root[0]"
`;

exports[`functional:inspect > should handle nodes outside of children (sample 1) 1`] = `
"jsxSpan[1]
│ close: jsxTag
│   attributes: []
│   close: true
│   name: jsxMember
│     object: jsxMember
│       object: jsxIdentifier "abc"
│       property: jsxIdentifier "def"
│     property: jsxIdentifier "ghi"
│   selfClosing: false
│ open: jsxTag
│   attributes:
│   ├─0 jsxAttribute null
│   │     name: jsxIdentifier "alpha"
│   ├─1 jsxAttributeExpression "...props"
│   └─2 jsxAttribute null
│         name: jsxIdentifier "bravo"
│   close: false
│   name: jsxMember
│     object: jsxMember
│       object: jsxIdentifier "abc"
│       property: jsxIdentifier "def"
│     property: jsxIdentifier "ghi"
│   selfClosing: false
└─0 jsxExpressionSpan "1 + 1""
`;

exports[`functional:inspect > should see attributes as data 1`] = `
"root[1] (1:1-1:19, 0-18)
└─0 element<album>[0] (1:1-1:19, 0-18)
      attributes: {"id":"123"}"
`;

exports[`functional:inspect > should see data as data 1`] = `
"album
  data: {"id":"123"}"
`;

exports[`functional:inspect > should see properties as data 1`] = `
"element<button>[0]
  properties: {"type":"submit","value":"Send"}"
`;

exports[`functional:inspect > should support \`positions: false\` 1`] = `
"comment[3]
├─0 blockTag<@file>[1]
│   └─0 text "Fixtures - average"
├─1 blockTag<@module>[1]
│   └─0 text "fixtures/average"
└─2 blockTag<@see>[1]
    └─0 text "https://codewars.com/kata/57a2013acf1fa5bfc4000921""
`;

exports[`functional:inspect > should work with list of nodes (sample 0) 1`] = `""`;

exports[`functional:inspect > should work with list of nodes (sample 1) 1`] = `
"├─0 comment[3] (1:1-5:4, 0-116)
│   ├─0 blockTag<@file>[1] (2:4-2:25, 7-28)
│   │   └─0 text "Fixtures - diff" (2:10-2:25, 13-28)
│   ├─1 blockTag<@module>[1] (3:4-3:25, 32-53)
│   │   └─0 text "fixtures/diff" (3:12-3:25, 40-53)
│   └─2 blockTag<@see>[1] (4:4-4:59, 57-112)
│       └─0 text "https://codewars.com/kata/523f5d21c841566fde000009" (4:9-4:59, 62-112)
└─1 comment[8] (7:1-23:4, 118-582)
    ├─0 description[1] (8:4-9:37, 125-237)
    │   └─0 paragraph[9] (8:4-9:37, 125-237)
    │       ├─0 text "Given two number arrays, " (8:4-8:29, 125-150)
    │       ├─1 inlineCode "a" (8:29-8:32, 150-153)
    │       ├─2 text " and " (8:32-8:37, 153-158)
    │       ├─3 inlineCode "b" (8:37-8:40, 158-161)
    │       ├─4 text ", the function returns a new array with elements in " (8:40-9:16, 161-216)
    │       ├─5 inlineCode "b" (9:16-9:19, 216-219)
    │       ├─6 text " removed from " (9:19-9:33, 219-233)
    │       ├─7 inlineCode "a" (9:33-9:36, 233-236)
    │       └─8 text "." (9:36-9:37, 236-237)
    ├─1 blockTag<@example>[1] (11:4-12:27, 244-279)
    │   └─0 code "diff([], [4, 5]) // []" (12:5-12:27, 257-279)
    │         lang: null
    │         meta: null
    ├─2 blockTag<@example>[1] (13:4-14:29, 283-320)
    │   └─0 code "diff([3, 4], [3]) // [4]" (14:5-14:29, 296-320)
    │         lang: null
    │         meta: null
    ├─3 blockTag<@example>[1] (15:4-16:35, 324-367)
    │   └─0 code "diff([1, 2, 3], [1, 2]) // [3]" (16:5-16:35, 337-367)
    │         lang: null
    │         meta: null
    ├─4 blockTag<@example>[1] (17:4-18:37, 371-416)
    │   └─0 code "diff([1, 8, 2], []) // [1, 8, 2]" (18:5-18:37, 384-416)
    │         lang: null
    │         meta: null
    ├─5 blockTag<@param>[2] (20:4-20:44, 423-463)
    │   ├─0 typeExpression "number[]" (20:11-20:21, 430-440)
    │   └─1 text "a - First number array" (20:22-20:44, 441-463)
    ├─6 blockTag<@param>[2] (21:4-21:45, 467-508)
    │   ├─0 typeExpression "number[]" (21:11-21:21, 474-484)
    │   └─1 text "b - Second number array" (21:22-21:45, 485-508)
    └─7 blockTag<@return>[5] (22:4-22:70, 512-578)
        ├─0 typeExpression "number[]" (22:12-22:22, 520-530)
        ├─1 text "New array with elements in " (22:23-22:50, 531-558)
        ├─2 inlineCode "b" (22:50-22:53, 558-561)
        ├─3 text " removed from " (22:53-22:67, 561-575)
        └─4 inlineCode "a" (22:67-22:70, 575-578)"
`;

exports[`functional:inspect > should work with literals (sample 0) 1`] = `"bigint 13n"`;

exports[`functional:inspect > should work with literals (sample 1) 1`] = `"boolean true"`;

exports[`functional:inspect > should work with literals (sample 2) 1`] = `"number 3"`;

exports[`functional:inspect > should work with literals (sample 3) 1`] = `
"regexp "/(?<=(?<a>\\\\w){3})f/u"
  flags: "u"
  pattern: "(?<=(?<a>\\\\w){3})f""
`;

exports[`functional:inspect > should work with literals (sample 4) 1`] = `"string """`;

exports[`functional:inspect > should work with literals (sample 5) 1`] = `"null null"`;

exports[`functional:inspect > should work with literals (sample 6) 1`] = `"undefined undefined"`;

exports[`functional:inspect > should work with non-nodes (sample 0) 1`] = `""node""`;

exports[`functional:inspect > should work with non-nodes (sample 1) 1`] = `"13"`;

exports[`functional:inspect > should work with non-nodes (sample 2) 1`] = `"null"`;

exports[`functional:inspect > should work with non-nodes (sample 3) 1`] = `"null"`;

exports[`functional:inspect > should work with parents (sample 0) 1`] = `"root[0]"`;

exports[`functional:inspect > should work with parents (sample 1) 1`] = `
"table[2]
│ align: ["center","left"]
├─0 tableRow[2]
│   ├─0 tableCell[1]
│   │   └─0 text "foo"
│   └─1 tableCell[1]
│       └─0 text "bar"
└─1 tableRow[2]
    ├─0 tableCell[1]
    │   └─0 text "baz"
    └─1 tableCell[1]
        └─0 text "qux""
`;

exports[`functional:inspect > should work with parents (sample 2) 1`] = `
"root[4]
├─0 comment[3] (1:1-5:4, 0-114)
│   ├─0 blockTag<@file>[1] (2:4-2:24, 7-27)
│   │   └─0 text "Fixtures - hrt" (2:10-2:24, 13-27)
│   ├─1 blockTag<@module>[1] (3:4-3:24, 31-51)
│   │   └─0 text "fixtures/hrt" (3:12-3:24, 39-51)
│   └─2 blockTag<@see>[1] (4:4-4:59, 55-110)
│       └─0 text "https://codewars.com/kata/52685f7382004e774f0001f7" (4:9-4:59, 60-110)
├─1 comment[6] (7:1-20:4, 116-473)
│   ├─0 description[1] (8:4-9:39, 123-238)
│   │   └─0 paragraph[5] (8:4-9:39, 123-238)
│   │       ├─0 text "Given a non-negative integer, " (8:4-8:34, 123-153)
│   │       ├─1 inlineCode "seconds" (8:34-8:43, 153-162)
│   │       ├─2 text ", the functions returns the time in a human-readable format (" (8:43-9:27, 162-226)
│   │       ├─3 inlineCode "HH:MM:SS" (9:27-9:37, 226-236)
│   │       └─4 text ")." (9:37-9:39, 236-238)
│   ├─1 blockTag<@example>[1] (11:4-12:25, 245-278)
│   │   └─0 code "hrt(0) // '00:00:00'" (12:5-12:25, 258-278)
│   │         lang: null
│   │         meta: null
│   ├─2 blockTag<@example>[1] (13:4-14:26, 282-316)
│   │   └─0 code "hrt(60) // '00:01:00'" (14:5-14:26, 295-316)
│   │         lang: null
│   │         meta: null
│   ├─3 blockTag<@example>[1] (15:4-16:30, 320-358)
│   │   └─0 code "hrt(359999) // '99:59:59'" (16:5-16:30, 333-358)
│   │         lang: null
│   │         meta: null
│   ├─4 blockTag<@param>[2] (18:4-18:45, 365-406)
│   │   ├─0 typeExpression "number" (18:11-18:19, 372-380)
│   │   └─1 text "seconds - Time in seconds" (18:20-18:45, 381-406)
│   └─5 blockTag<@return>[4] (19:4-19:63, 410-469)
│       ├─0 typeExpression "string" (19:12-19:20, 418-426)
│       ├─1 text "Time in human-readable format (" (19:21-19:52, 427-458)
│       ├─2 inlineCode "HH:MM:SS" (19:52-19:62, 458-468)
│       └─3 text ")" (19:62-19:63, 468-469)
├─2 comment[2] (22:3-26:6, 519-613)
│   ├─0 description[1] (23:6-23:51, 528-573)
│   │   └─0 paragraph[2] (23:6-23:51, 528-573)
│   │       ├─0 inlineTag<@linkcode> "seconds" (23:6-23:25, 528-547)
│   │       └─1 text " in human-readable format." (23:25-23:51, 547-573)
│   └─1 blockTag<@var>[2] (25:6-25:29, 584-607)
│       ├─0 typeExpression "string" (25:11-25:19, 589-597)
│       └─1 text "formatted" (25:20-25:29, 598-607)
└─3 comment[2] (31:5-35:8, 742-846)
    ├─0 description[1] (32:8-32:58, 753-803)
    │   └─0 paragraph[2] (32:8-32:58, 753-803)
    │       ├─0 inlineTag<@linkcode> "seconds" (32:8-32:27, 753-772)
    │       └─1 text " in hours, minutes, or seconds." (32:27-32:58, 772-803)
    └─1 blockTag<@const>[2] (34:8-34:28, 818-838)
        ├─0 typeExpression "number" (34:15-34:23, 825-833)
        └─1 text "time" (34:24-34:28, 834-838)"
`;

exports[`functional:inspect > should work with void nodes 1`] = `"break"`;
